# SOF


[2021-09-13.00]
Workarounds for cores produced by wrong settings of Dot-Ofsset (w_doto, b_doto)
outside of the current line.


Reproducing the error:

(1) Fill Paragraph (Esc-q)

(2) Undo (Ctrl+Shift+_)

This confuses the doto settings: Microemacs always assumes 0 <= doto <= l_used.

With -DJES_UNSEC_CODE the errors could be reproduced.

Furthermore fill-paragraph does not work correctly e.g. when used in som TeX-documents.


[2021-10-05.00]

Next steps to repair the (w|b)_doto-Problem:

(1) Introduce (get|set)_(b|w)_doto Makros and use the througout the code: Done.

(2) Test uemacs with this modification: Done.

(3) Fix wrong (w|b)_doto-Settings in the (get|set)_(b|w)_doto Macros and trace wrong settings: Done.

(4) Check that TRC in line.c isn't triggered any more: Done.

(5) Remove Fix and TRC in line.c: Done.

(6) Enable the other platforms: Done

(7) Introduce get/set-Logic and repair-code of the dot-code for the mark code as well: Might be unneccesary

(8) FIX THIS ERROR: `TRC (../src/undo.c/131): set_w_doto(): Too large doto: 156. REWRITTEN TO: 155.'
    - This seems to be an error in the fillpara function in word.c
    - Introduced the trParFill() in random.c which is an unduable replacement.
    Done

(9) The "indent-region" function is also undoable: Must be repaired: Done.

(10) Introduce a goto(b|e)ofrp(): Goto(Beginning|End)ofRawParagraph and
     a trRParFill(): Raw paragraphs are limited by '\r' only. DONE: Not
     necessary, simply set the environment variable $wchars to a string
     containing all charcters thet will be recogbnized as parts of
     words, e.g.:

    set $wchars "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()-_=+{}[]\\|;:\"'<>,./?~`"

===>

(11) _goto-eop goes to the end of the next paragrapg, when point is at
    the last letter of a paragraph:

    lastword.   or   lastword
           ^                ^

(12) Make filter-buffer redoable and introduce filter-region.


[2021-11-07.00]

The automatic reformatting has destroyed some of the very nice formatted
comments in the original code: This has to be recreated!

These files have been reviewed:

File Name     Formated Comments   Func. Proto.    Init.   Warnings  EOF
============================================================================
src/bind.c      X                                           X         X
src/exec.c      X                   X               X       X         X
src/input.c     X                   X               X       X         X
src/display.c   X                                           X
src/eval.c      X                                           X         X
src/file.c      X                                           X         X
src/isearch.c   X                   X               X       X         X
src/line.c      X                   X               X       X         X
src/keyboard.c  X                   X               X       X         X
src/lock.c      X                   X               X       X         X
src/main.c      X                   X                       X         X
src/mouse.c                                                 X
src/screen.c                                                X
src/search.c    X                                           X
src/unix.c                                                  X
src/random.c    X                                           X         X
src/replace.c   X                                           X
src/main.c                                                  X
h/estruct.h     X                                                     X
h/eproto.h      X                                                     X
h/mswin.h       X                                                     X


[2023-07-13.00]
- Substitute `void *' with VOIDP  (\/)
- edef.h nachschauen: Das wird in search.c verwendet: Ist da signed/unsigned wichtig?   (\/)
- Fix compiler warnings.          (\/)
- Compiles without warnings on linux (gcc), FreeBSD (clan, gcc), OpenBSD (clang),
  Solaris SPARC (gcc)             (\/)
- static returned buffer in eval.c:gtfun()  (\/)
- Macro ISSPACE                   (\/)
- replace *all* estruct.h files   (\/)
- Include Martin Vorlaender's VMS changes:
  + file.c:getfile(): Do a strdup of `fname'
  + smg.c:            Reformat.
  + vms.c:            Reformat.
  + The functions grabnowait(), grabwait() added to eproto.h have
    different return types (int / unsigned char) for different
    platforms: This is an *error* which needs to be fixed.
- continue in:
  + Comments
  + PCDOS with Borland C++: issue with help-system:
    - Call help
    - Use arrow key
    - You are catched in a macro-loop
    - Does not occur on MicroEmacs 4.0
    - We test these versions:

      (a) ue400dev.zip (2005)
      (b) emacs5.zip (2009): Daniel_Michael_Lawrence/http:@@www.aquest.com/downloads
      (c) https:@@github.com@pmachapman@memacs.tar.xz --- pmachapman.zip (2018)
      (d) master.zip: Archive created out of the current (2023-07-19) master branch.

      Version (c) Seems to be younger than Version (b).

      ( i)  (a): The Error does not occur.
      (ii)  (c): Compiled with a modified (a) estruct.h: The error does
                not occur.
      (iii) (d): Compiled with a modified (a) estruct.h: The error does
                not occur.

    - The error can be reproduced on UNIX(FreeBSD): it occurs in branch
      "fixes" but not in branch "master")

      Next step: ?Bisecvtion in "fixes".

    - emacs.fixes_2023-04-03_GOOD
      emacs.fixes_2023-07-13_BAD

      commit a15abcc4adcb9958f047a7fc023ce6e920ffdaeb
      Author: Dr. Joachim Schneider <jesmx@hal.rhein-neckar.de>
      Date:   Thu Jul 13 19:39:27 2023 +0200

        Removed all warnings.

      commit 869090a8fd95b287b433d0077b7c088c54635ed1
      Author: Dr. Joachim Schneider <jesmx@hal.rhein-neckar.de>
      Date:   Mon Apr 3 11:37:56 2023 +0200

        Ich bin gerade am reparieren, will den derzeitigen Stand aber sichern.

    - Regression found:

      $ git diff ../src/eval.c
      diff --git a/ue500/src/eval.c b/ue500/src/eval.c
      index 0854636..00d23f5 100644
      --- a/ue500/src/eval.c
      +++ b/ue500/src/eval.c
      @@ -81,9 +81,9 @@ CONST char  *fname;     /* name of function to evaluate */
           register int  arg     = 0;          /* value of some arguments    */
           BUFFER        *bp     = NULL;       /* scratch buffer pointer     */
           /* ==== These might be part of the (static allocated) result ==== */
      -    static char   arg1[NSTRING];        /* value of first argument    */
      -    static char   arg2[NSTRING];        /* value of second argument   */
      -    static char   arg3[NSTRING];        /* value of third argument    */
      +    char          arg1[NSTRING];        /* value of first argument    */
      +    char          arg2[NSTRING];        /* value of second argument   */
      +    char          arg3[NSTRING];        /* value of third argument    */
           static char   result[2 * NSTRING];  /* string result              */
           /* ============================================================== */

[2023-07-20.00]
New TODO's
* Check eval.c:gtfun(): why arg{1,2,3} must not be static.
* Why has the size grown so much:
  548512 emacs.fixes_2023-04-03_GOOD
  840016 emacs.fixes_2023-07-13_BAD



# EOF
