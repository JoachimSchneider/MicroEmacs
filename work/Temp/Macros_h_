eproto.h:#define CASRT(condition)  typedef int XCONCAT3(dummy_, __LINE__, _)[(condition)?1:-1]
eproto.h:            ZEROMEM(STATIC_STR_RET_ARR_);                             \
eproto.h:            rc_ = xstrlcpy(STATIC_STR_RET_ARR_, STATIC_STR_RET_VAL_,  \
eproto.h:                           SIZEOF(STATIC_STR_RET_ARR_));              \
eproto.h:            if ( SIZEOF(STATIC_STR_RET_ARR_) <= rc_ ) {               \
eproto.h:                    " = %d", #func, SIZEOF(STATIC_STR_RET_ARR_),      \
eproto.h:#if ( VA_LIST_ASSIGN_ )
eproto.h:#elif ( defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901 )
eproto.h:#define FSTR_   MKXSTRING(FUNC_)
eproto.h:    eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");
eproto.h:    eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");
eproto.h:            ASRT_Catch (__FILE__, __LINE__, #e);                        \
eproto.h:            ASRTM_Catch (__FILE__, __LINE__, #e, m);                    \
eproto.h:            ASRT_Catch (__FILE__, __LINE__, #e);                        \
eproto.h:            eputs("File: "); eputs(__FILE__); eputs(", Line: ");        \
eproto.h:            eputi(__LINE__); eputs("\n");                               \
eproto.h:            eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");   \
eproto.h:            eputs("File: "); eputs(__FILE__); eputs(", Line: ");        \
eproto.h:            eputi(__LINE__); eputs("\n");                               \
eproto.h:            eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");   \
eproto.h:            eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");   \
eproto.h:            eputs("OS: `"); eputs(strerror(errno_sv_)); eputs("'\n");   \
eproto.h:    if ( FirstCall_ ) {           \
estruct.h:#if defined (__STDC__) || defined(__cplusplus)
mswin.h:#  if defined(__BORLANDC__) && (__TURBOC__<0x300)
mswin.h:#  endif  /* defined(__BORLANDC__) && (__TURBOC__<0x300) */
