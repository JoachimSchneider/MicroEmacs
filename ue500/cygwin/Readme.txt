MicroEMACS for CygWin
=====================

* At runtime the only needed CygWin component ist the cygwin1.dll which
  must be somewhere in the search path.

* To compile one needs a CygWin environment including gcc, git and make
  One may also use a MobaXTerm environment
  <https://mobaxterm.mobatek.net/>

* Testet on Microsoft Windows XP, 10, 11

* CYGWIN seems to support ANSI Sscape Sequences via its runtime: They
  are used for terminal control.


This simple session script shows how to get and compile the MicroEMACS:

We are inside of a cygwin bash terminal:

$ git clone https://github.com/JoachimSchneider/MicroEmacs
$ # git switch fixes
$ cd MicroEmacs/ue500/cygwin
$ make clean
$ make
# We assume that C:\bin is in your Windows path
$ mkdir -p C:/bin
$ mkdir -p C:/Pgm/MicroEMACS/bin
$ mkdir -p C:/Pgm/MicroEMACS/cmd
$ cp -p ../cmd/*  C:/Pgm/MicroEMACS/cmd/
$ cp -p emacs.rc  C:/Pgm/MicroEMACS/bin/
$ cp -p emacs.exe C:/Pgm/MicroEMACS/bin/
$ cat << 'EOC'  | awk '{ printf "%s\r\n", $0; }' > C:/bin/uemacs.cmd
@REM uemacs.cmd
@echo off
set PATH=C:\Pgm\MicroEMACS\bin;C:\Pgm\MicroEMACS\cmd;%PATH%
start C:\Pgm\MicroEMACS\bin\emacs.exe %1 %2 %3 %4 %5 %6 %7 %8 %9
REM EOF
EOC


If cygwin1.dll and C:\bin are in your Windows search PATH you may start
MicroEMACS by typing `uemacs [<Arguments>] { <FileName> }' in a Windwos
Command Window.

The emacs.rc file is searched for in this order in these directories:
(1) %HOME%
(2) %PATH%
(3) <directories specified in epath.h>
See the function flook() in bind.c

The emacs.rc file inludes definitions for function keys and other
special keys. You may look up the strings generated by a specific key
with the help of the scancode program with C source in the tools
subdirectory.



# EOF
